version: '3.4'
name: mini-e-commerce

services:
  user_service:
    container_name: user_service
    image: ${DOCKER_REGISTRY-}userserviceapi
    ports:
        - 50015:80
    build:
      context: .
      dockerfile: Services/UserService/UserService.API/Dockerfile
    depends_on:
        - rabbitmq
    networks:
        - backend

  basket_service:
    container_name: basket_service
    image: ${DOCKER_REGISTRY-}basketserviceapi
    build:
      context: .
      dockerfile: Services/BasketService/BasketService.API/Dockerfile
    ports:
        - 50014:80
    depends_on:
        - rabbitmq
    networks:
        - backend

  order_service:
    container_name: order_service
    image: ${DOCKER_REGISTRY-}orderserviceapi
    build:
      context: .
      dockerfile: Services/OrderService/OrderService.API/Dockerfile
    ports:
        - 50013:80
        #- 50003:443
    depends_on: 
        - order_service_db
        - rabbitmq 
    networks:
        - backend

  order_service_db:
    container_name: order_service_db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
        - 50113:1433
    environment:
        - ACCEPT_EULA=Y
        - MSSQL_SA_PASSWORD=myStong_Password123# 
    networks:
        - backend

  purchase_service:
    container_name: purchase-service
    image: ${DOCKER_REGISTRY-}purchaseserviceapi
    build:
      context: .
      dockerfile: Services/PurchaseService/PurchaseService.API/Dockerfile
    ports:
        - 50012:80
        #- 50002:443
    depends_on:
        - rabbitmq
    networks:
        - backend

  product_service:
    container_name: product_service
    image: ${DOCKER_REGISTRY-}productserviceapi
    build:
      context: .
      dockerfile: Services/ProductService/ProductService.API/Dockerfile
    ports:
        - 50011:80
        #- 50001:443
    depends_on:
        - product_service_db
        - rabbitmq
    networks:
        - backend

  product_service_db:
    container_name: product_service_db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
        - 50111:1433
    environment:
        - ACCEPT_EULA=Y
        - MSSQL_SA_PASSWORD=myStong_Password123# 
    networks:
        - backend

  desktop_app:
    container_name: desktop_app
    image: ${DOCKER_REGISTRY-}desktopapp
    build:
      context: .
      dockerfile: Frontends/DesktopApp/Dockerfile
    ports:
        - 50010:80
        #- 50000:443
    networks:
        - backend
    depends_on:
        - gateway 

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest
    ports:
        - "5672:5672"
        - "15672:15672"
    networks:
        - backend

  gateway:
    container_name: gateway
    image: ${DOCKER_REGISTRY-}miniecommercegateway
    build:
      context: .
      dockerfile: Gateway/MiniECommerce.Gateway/Dockerfile
    ports:
        - 50000:80
    links:
        - product_service
        - purchase_service
        - order_service 
        - user_service 
    depends_on:
        - product_service
        - purchase_service
        - order_service
        - user_service 
        - rabbitmq 
    networks:
        - backend
        - monitoring 

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - desktop_app

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus
    volumes:
      - ./grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin 

networks:
  backend:
    driver: bridge
  monitoring:
    driver: bridge



