version: '3.4'
name: mini-e-commerce

services:
  basket_service:
    container_name: basket_service
    image: ${DOCKER_REGISTRY-}basketserviceapi
    build:
      context: .
      dockerfile: Services/BasketService/BasketService.API/Dockerfile
    ports:
        - 50014:80
    networks:
        - backend

  order_service:
    container_name: order_service
    image: ${DOCKER_REGISTRY-}orderserviceapi
    build:
      context: .
      dockerfile: Services/OrderService/OrderService.API/Dockerfile
    ports:
        - 50013:80
        #- 50003:443
    depends_on: 
        - order_service_db
    networks:
        - backend

  order_service_db:
    container_name: order_service_db
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
        - 50113:1433
    environment:
        - ACCEPT_EULA=Y
        - MSSQL_SA_PASSWORD=myStong_Password123# 
    networks:
        - backend

  purchase_service:
    container_name: purchase-service
    image: ${DOCKER_REGISTRY-}purchaseserviceapi
    build:
      context: .
      dockerfile: Services/PurchaseService/PurchaseService.API/Dockerfile
    ports:
        - 50012:80
        #- 50002:443
    networks:
        - backend

  product_service:
    container_name: product_service
    image: ${DOCKER_REGISTRY-}productserviceapi
    build:
      context: .
      dockerfile: Services/ProductService/ProductService.API/Dockerfile
    ports:
        - 50011:80
        #- 50001:443
    networks:
        - backend

  desktop_app:
    container_name: desktop_app
    image: ${DOCKER_REGISTRY-}desktopapp
    build:
      context: .
      dockerfile: Frontends/DesktopApp/Dockerfile
    ports:
        - 50010:80
        #- 50000:443
    networks:
        - backend
    depends_on:
        - order_service   

  gateway:
    container_name: gateway
    image: ${DOCKER_REGISTRY-}miniecommercegateway
    build:
      context: .
      dockerfile: Gateway/MiniECommerce.Gateway/Dockerfile
    ports:
        - 50000:80
    links:
        - product_service
        - purchase_service
        - order_service 
    depends_on:
        - product_service
        - purchase_service
        - order_service
    networks:
        - backend
  
networks:
  backend:
    driver: bridge


