@page "/"
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@attribute [Authorize]
@inject IHttpContextAccessor httpContextAccessor
<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<pre>@_res</pre>

@code {
    private string _res;

    protected override async Task OnInitializedAsync()
    {
        var addresses = new[]
        {
            "http://order_service"
    };

        int count = 0;

        foreach(var adr in addresses)
        {
            try
            {
                var token = await httpContextAccessor.HttpContext
                    .GetTokenAsync(CookieAuthenticationDefaults.AuthenticationScheme, "access_token");

                var hello = httpContextAccessor.HttpContext.Request.Cookies.ToList();

                _res += System.Text.Json.JsonSerializer.Serialize(hello);
                _res += "Token: " + token + "\r\n";

                var httpClient = new HttpClient();

                var req = new HttpRequestMessage()
                {
                    RequestUri = new Uri(adr + "/Order")
                };

                var res = await httpClient.SendAsync(req);

                _res += $"({++count}) Adr:" + adr + "Statuscode: " + res.StatusCode + "\r\n";

                _res += await res.Content.ReadAsStringAsync();
            }
            catch(Exception e)
            {
                _res += $"({++count}) " + adr + $" failed. {e.Message}\r\n";
            }
        }
    }
}
